#!/usr/bin/python
# --------------------------------------------------------------------------
# Class definition of KeyController - base class with operational functions
#
# Author: Bernhard Bablok
# License: GPL3
#
# Website: https://github.com/bablokb/nerd-alarmclock
#
# --------------------------------------------------------------------------

class KeyController(object):
  """ Key controller """

  # initialize object   ----------------------------------------------------

  def __init__(self,settings):
    """ Constructor """

    self._settings   = settings
    self._stop_event = settings.stop_event

  # --- change alarm state   -----------------------------------------------

  def change_alarm_state(self,nr):
    """ change the state of the given alarm """
    self._settings.log.msg("KeyController: changing state of alarm %s" % nr)

    old = self._settings.get("alarm."+nr+".state")

    if old == "disabled":
      new = "enabled"
    elif old == "enabled":
      new = "disabled"
    elif old == "ringing":
      new = "enabled"

    self._settings.set("alarm."+nr+".state",new)

  # --- cylcle display brightness   ---------------------------------------

  def cycle_display_brightness(self):
    self._settings.log.msg("KeyController: changing display brightness")
    mode = self._settings.get("_day_mode")
    cfg  = "display.brightness." + mode
    old = self._settings.get(cfg)
    new = ( old + 1) % 5
    self._settings.set(cfg,new)

  # --- cylcle LED brightness   -------------------------------------------

  def cycle_led_brightness(self):
    self._settings.log.msg("KeyController: changing led brightness")
    mode = self._settings.get("_day_mode")
    cfg  = "led.brightness." + mode
    old = self._settings.get(cfg)
    new = ( old + 1) % 5
    self._settings.set(cfg,new)

  # --- cylcle display mode   ---------------------------------------------

  def cycle_display_mode(self):
    self._settings.log.msg("KeyController: changing display mode")

  # --- cylcle LED brightness   -------------------------------------------

  def cycle_led_mode(self):
    self._settings.log.msg("KeyController: changing led mode")
